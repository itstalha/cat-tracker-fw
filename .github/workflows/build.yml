name: build-it

on: push

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: GCC ARM Embed
        run: |
          wget 'https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2018q2/gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2?revision=bc2c96c0-14b5-4bb4-9f18-bceb4050fee7?product=GNU%20Arm%20Embedded%20Toolchain,64-bit,,Linux,7-2018-q2-update' -O ${GITHUB_WORKSPACE}/gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2
          tar xjf ${GITHUB_WORKSPACE}/gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2

      - name: Device Tree Compile 1.4.7
        run: |
          wget -nc 'http://mirrors.kernel.org/ubuntu/pool/main/d/device-tree-compiler/device-tree-compiler_1.4.7-1_amd64.deb' -O ${GITHUB_WORKSPACE}/device-tree-compiler_1.4.7-1_amd64.deb
          sudo dpkg -i ${GITHUB_WORKSPACE}/device-tree-compiler_1.4.7-1_amd64.deb

      - name: Install Zephyr dependencies
        run: |
          sudo apt-get -y install ninja-build gperf python3-pip python3-setuptools
          sudo pip3 install cmake west wheel

      - name: West init
        run: |
          export PATH=~/.local/bin:$PATH
          west init -m https://github.com/${GITHUB_REPOSITORY} --mr ${GITHUB_SHA}
          west update
          sudo pip3 install -r zephyr/scripts/requirements.txt
          sudo pip3 install -r nrf/scripts/requirements.txt
          # Remove system provided python cryptography module so the next step does not crash
          sudo apt-get -y remove python-cryptography python3-cryptography
          sudo pip3 install -r mcuboot/scripts/requirements.txt

      - name: Patch West to enable nrf9160_pca10015ns
        run: patch -b ${GITHUB_WORKSPACE}/zephyr/cmake/app/boilerplate.cmake < ${GITHUB_WORKSPACE}/nrf/.github/workflows/zephyr.patch

      - name: Determine next release version
        run: |
          npm ci
          export NEXT_VERSION=`node ${GITHUB_WORKSPACE}/nrf/.github/workflows/get-next-version.js`
          echo -n $NEXT_VERSION > .version
          echo "#define DEVICE_APP_VERSION \"$NEXT_VERSION\"" > ${GITHUB_WORKSPACE}/nrf/applications/cat_tracker/src/version.h
          cat ${GITHUB_WORKSPACE}/nrf/applications/cat_tracker/src/version.h

      - name: Build
        run: |
          export ZEPHYR_TOOLCHAIN_VARIANT=gnuarmemb
          export GNUARMEMB_TOOLCHAIN_PATH=${GITHUB_WORKSPACE}/gcc-arm-none-eabi-7-2018-q2-update
          export PATH=~/.local/bin:$PATH
          cd ${GITHUB_WORKSPACE}/nrf/applications/cat_tracker
          west build -p auto -b nrf9160_pca20035ns
          mv ${GITHUB_WORKSPACE}/nrf/applications/cat_tracker/build/zephyr/merged.hex ${GITHUB_WORKSPACE}/nrf/cat-tracker-nrf9160_pca20035ns.hex
          sha256sum ${GITHUB_WORKSPACE}/nrf/cat-tracker-nrf9160_pca20035ns.hex
          west build -p auto -b nrf9160_pca10090ns
          mv ${GITHUB_WORKSPACE}/nrf/applications/cat_tracker/build/zephyr/merged.hex ${GITHUB_WORKSPACE}/nrf/cat-tracker-nrf9160_pca10090ns.hex
          sha256sum ${GITHUB_WORKSPACE}/nrf/cat-tracker-nrf9160_pca10090ns.hex
          west build -p auto -b nrf9160_pca10015ns
          mv ${GITHUB_WORKSPACE}/nrf/applications/cat_tracker/build/zephyr/merged.hex ${GITHUB_WORKSPACE}/nrf/cat-tracker-nrf9160_pca10015ns.hex
          sha256sum ${GITHUB_WORKSPACE}/nrf/cat-tracker-nrf9160_pca10015ns.hex

      - name: Release
        if: startsWith(github.ref, 'refs/heads/saga')
        run: |
          wget https://github.com/github/hub/releases/download/v2.12.8/hub-linux-amd64-2.12.8.tgz
          tar xzf hub-linux-amd64-2.12.8.tgz
          export NEXT_VERSION=`cat .version`
          cp -v ${GITHUB_WORKSPACE}/nrf/cat-tracker-nrf9160_pca10015ns.hex cat-tracker-PCA10015-AssetTracker-$NEXT_VERSION.hex
          cp -v ${GITHUB_WORKSPACE}/nrf/cat-tracker-nrf9160_pca20035ns.hex cat-tracker-PCA20035-Thingy52-$NEXT_VERSION.hex
          cp -v ${GITHUB_WORKSPACE}/nrf/cat-tracker-nrf9160_pca10090ns.hex cat-tracker-PCA10090-nRF9160DK-$NEXT_VERSION.hex
          ./hub-linux-amd64-2.12.8/bin/hub release create -m "$NEXT_VERSION" -a "cat-tracker-PCA10015-AssetTracker-$NEXT_VERSION.hex#Pre-build HEX file for PCA10015 / Asset Tracker ($NEXT_VERSION)" -a "cat-tracker-PCA20035-Thingy52-$NEXT_VERSION.hex#Pre-build HEX file for PCA20035 / Thingy:91 ($NEXT_VERSION)" -a "cat-tracker-PCA10090-nRF9160DK-$NEXT_VERSION.hex#Pre-build HEX file for PCA10090 / nRF9160 DK ($NEXT_VERSION)" $NEXT_VERSION
